tidy_data,
weights = log(as.integer(tidy_data$Total.Population))
)
test_model_4
test_model_4 <-
lmer(
dem16_frac ~ White + Uninsured + Diabetes + (White + Uninsured + Diabetes | State),
tidy_data,
weights = log(as.integer(tidy_data$Total.Population))
)
test_model_4
library(coefplot)
coefplot(test_model_4)
test_model_4 <-
lmer(
logit(dem16_frac) ~ White + Uninsured + Diabetes + (White + Uninsured + Diabetes | State),
tidy_data,
weights = log(as.integer(tidy_data$Total.Population))
)
coefplot(test_model_4)
test_model_4 <-
lmer(
logit(dem16_frac) ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
weights = log(as.integer(tidy_data$Total.Population))
)
coefplot(test_model_4)
?rescale
tidy_data$White %>% historgram
tidy_data$White %>% histogram
tidy_data$White %>% rescale %>%  histogram
?resacle
?rescale
library(scales)
tidy_data$White %>% rescale %>%  histogram
a <- coef(test_model_4)
a$State
a$State %>% histogram
a$State$Diabetes %>% histogram
a$State$Unemployment %>% histogram
a$State$Median.Earnings.2010.dollars %>% histogram
a$State$Uninsured %>% histogram
a$State$`(Intercept)` %>% histogram
plot(test_model_4)
class(test_model_4)
?plot.lme4
?lme4
?cbind2
tidy_data <-
tidy_data %>%
mutate(dem_votes = as.integer(dem16_frac * Total.Population),
rep_votes = as.integer(rep16_frac * Total.Population)
)
test_model_4 <-
glmer(
cbind(dem_votes, rep_votes) ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
family = "binomial",
weights = log(as.integer(tidy_data$Total.Population))
)
test_model_4 <-
glmer(
cbind(dem_votes, rep_votes) ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
family = "binomial"
#,weights = log(as.integer(tidy_data$Total.Population))
)
rm(test_model_4)
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
family = "binomial"
,weights = log(as.integer(tidy_data$Total.Population))
)
test_model_4
plot(test_model_4)
coefplot(test_model_4)
model_response <-
tidy_data %>%
select(dem_votes, rep_votes) %>%
as.matrix
model_response
test_model_5 <-
glmer(
model_response ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
family = "binomial"
#,weights = log(as.integer(tidy_data$Total.Population))
)
model_response
test_model_5 <-
glmer(
cbind(dem_votes, rep_votes) ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars | State),
tidy_data,
family = binomial
#,weights = log(as.integer(tidy_data$Total.Population))
)
plot(test_model_4)
a <- coef(test_model_4)
a$State$Uninsured %>% histogram
a$State$Unemployment %>% histogram
a$State$Unemployment %>% histogram
a$State$median_age %>% histogram
a$State$`(Intercept)` %>% histogram
a$State$White
a$State$White %>% histogram
colnames(tidy_data)
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = "binomial"
,weights = log(as.integer(tidy_data$Total.Population))
)
?glmer
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = "binomial",
weights = as.integer(tidy_data$Total.Population)
)
as.integer(tidy_data$Total.Population)
as.integer(tidy_data$Total.Population) %>% class
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = binomial,
weights = as.integer(tidy_data$Total.Population)
)
tidy_data
tidy_data$votes
tidy_data$votes %>% as.integer
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
test_model_4 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = quasibinomial,
weights = as.integer(tidy_data$votes)
)
install.packages("blme")
library(blme)
?bglmer
test_model_6 <-
bglmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
tidy_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
scaled_data <-
tidy_data %>%
mutate(
White = rescale(White),
Uninsured = rescale(Uninsured),
Diabetes = rescale(median_age),
Unemployment = rescale(Unemployment),
Median.Earnings.2010.dollars = rescale(Median.Earnings.2010.dollars),
Teen.births = rescale(Teen.births),
Poor.mental.health.days = rescale(Poor.mental.health.days)
)
test_model_6 <-
bglmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
test_model_6
coefplot(test_model_6)
test_model_7 <-
glmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
coefplot(test_model_7)
scaled_data %>% colnames
scaled_data$Gini.Coefficient %>% histograme
scaled_data$Gini.Coefficient %>% histogram
scaled_data <-
tidy_data %>%
mutate(
White = rescale(White),
Uninsured = rescale(Uninsured),
Diabetes = rescale(median_age),
Unemployment = rescale(Unemployment),
Median.Earnings.2010.dollars = rescale(Median.Earnings.2010.dollars),
Teen.births = rescale(Teen.births),
Poor.mental.health.days = rescale(Poor.mental.health.days),
SIRE_homogeneity = rescale(SIRE_homogeneity)
)
test_model_6 <-
bglmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
test_model_6 <-
bglmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity +
(White + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
coefplot(test_model_6)
colnames(tidy_data)
test_model_6 <-
bglmer(
dem16_frac ~
White + Hispanic + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity +
(White + Hispanic + Uninsured + Diabetes +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
plot(test_model_6)
coefplot(test_model_6)
colnames(tidy_data)
scaled_data <-
tidy_data %>%
mutate(
White = rescale(White),
Hispanic = rescale(Hispanic),
Uninsured = rescale(Uninsured),
Diabetes = rescale(median_age),
Unemployment = rescale(Unemployment),
Median.Earnings.2010.dollars = rescale(Median.Earnings.2010.dollars),
Teen.births = rescale(Teen.births),
Poor.mental.health.days = rescale(Poor.mental.health.days),
SIRE_homogeneity = rescale(SIRE_homogeneity),
At.Least.High.School.Diploma = rescale(At.Least.High.School.Diploma)
)
test_model_6 <-
bglmer(
dem16_frac ~
White + Hispanic + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity + At.Least.High.School.Diploma +
(White + Hispanic + Uninsured + Diabetes +
At.Least.High.School.Diploma +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
test_model_6 %>% coefplot
colnames(tidy_data)
scaled_data <-
tidy_data %>%
mutate(
White = rescale(White),
Hispanic = rescale(Hispanic),
Uninsured = rescale(Uninsured),
Diabetes = rescale(median_age),
Unemployment = rescale(Unemployment),
Median.Earnings.2010.dollars = rescale(Median.Earnings.2010.dollars),
Teen.births = rescale(Teen.births),
Poor.mental.health.days = rescale(Poor.mental.health.days),
SIRE_homogeneity = rescale(SIRE_homogeneity),
At.Least.High.School.Diploma = rescale(At.Least.High.School.Diploma),
Violent.crime = rescale(Violent.crime)
)
test_model_6 <-
bglmer(
dem16_frac ~
White + Hispanic + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity + At.Least.High.School.Diploma +
Violent.crime +
(White + Hispanic + Uninsured + Diabetes +
At.Least.High.School.Diploma +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
Violent.crime +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(tidy_data$votes)
)
test_model_6 %>% coefplot
source('~/Dropbox/Gradient/Clients/Bacardi/Analysis/Nielsen/repel_plot.R')
library(readr)
age_spirit <- read_csv("~/Dropbox/Gradient/Clients/Bacardi/Analysis/Nielsen/age_spirit.csv")
View(age_spirit)
a <- age_spirit %>% repel_ca_from_table()
library(ca)
a <- age_spirit %>% repel_ca_from_table()
repel_ca_from_table(age_spirit)
age_spirit
age_spirit %>% ca
age_spirit %>% set_rownames(.$Age)
library(magrittr)
age_spirit %>% set_rownames(.$Age) %>% select(-Age) %>% repel_ca_from_table()
library(ggrepel)
age_spirit %>% set_rownames(.$Age) %>% select(-Age) %>% repel_ca_from_table()
library(stringr)
age_spirit %>% set_rownames(.$Age) %>% select(-Age) %>% repel_ca_from_table()
coefplot(test_model_6)
a <- coef(test_model_6)
attributes(a)
a
a$State$White %>% histogram
a$State$Diabetes %>% histogram
a$State$Gini.Coefficient %>% histogram
a$State$Diabetes %>% histogram
a$State %>% colnames
library(mclust)
hr_model <- test_model_6
hr_model_coef <- coef(hr_model)
?Mclust
county_clusters <- Mclust(
hr_model_coef$State
)
county_clusters
plot(county_clusters)
a <- princomp(hr_model_coef$State)
a
a$loadings
a$scores
plot(a$scores[, 1:2])
plot(a$scores[, 2:#])
q
#
)
plot(a$scores[, 2:3])
histogram(hr_model_coef$State$`(Intercept)`)
histogram(hr_model_coef$State$`(Intercept)`)
age_spirit %>% set_rownames(.$Age) %>% select(-Age) %>% repel_ca_from_table()
element_blank()
coefplot(test_model_6)
colnames(tidy_data)
?coefplot
summary(hr_model)
hr_model <-
bglmer(
dem16_frac ~
White + Uninsured + Diabetes + median_age +
Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
SIRE_homogeneity + At.Least.High.School.Diploma +
Violent.crime +
(White + Uninsured + Diabetes +
At.Least.High.School.Diploma +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
Violent.crime +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(scaled_data$votes)
)
coefplot(hr_model)
me_hr_model <-
bglmer(
dem16_frac ~
# White + Uninsured + Diabetes + median_age +
# Unemployment + Median.Earnings.2010.dollars +
# Teen.births + Poor.mental.health.days + Gini.Coefficient +
# SIRE_homogeneity + At.Least.High.School.Diploma +
# Violent.crime +
1 +
(White + Uninsured + Diabetes +
At.Least.High.School.Diploma +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
Violent.crime +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(scaled_data$votes)
)
me_hr_model <-
bglmer(
dem16_frac ~
1 +
(White + Uninsured + Diabetes +
At.Least.High.School.Diploma +
median_age + Unemployment + Median.Earnings.2010.dollars +
Teen.births + Poor.mental.health.days + Gini.Coefficient +
Violent.crime +
SIRE_homogeneity | State),
scaled_data,
family = binomial,
weights = as.integer(scaled_data$votes)
)
coefplot(me_hr_model)
a <- coef(me_hr_model)
a$State$White %>% histogram()
source('~/Dropbox/Gradient/Research/Election Analysis/SOM/som.R')
load("saved_elec_som")
saved_elec_som
b <- map(a, saved_elec_som)
b <- map(saved_elec_som, a)
b <- predict(saved_elec_som, a)
b <- predict(saved_elec_som, a)
b
head(b)
class(b)
saved_elec_som$unit.classif %>% head
saved_elec_som$unit.classif %>% max
saved_elec_som$unit.classif %>% min
saved_elec_som$distances %>% hist
